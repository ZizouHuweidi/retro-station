// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	orders_service "github.com/zizouhuweidi/retro-station/internal/services/orderservice/internal/shared/grpc/genproto"
)

// OrdersServiceServer is an autogenerated mock type for the OrdersServiceServer type
type OrdersServiceServer struct {
	mock.Mock
}

// CreateOrder provides a mock function with given fields: _a0, _a1
func (_m *OrdersServiceServer) CreateOrder(_a0 context.Context, _a1 *orders_service.CreateOrderReq) (*orders_service.CreateOrderRes, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrder")
	}

	var r0 *orders_service.CreateOrderRes
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.CreateOrderReq) (*orders_service.CreateOrderRes, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.CreateOrderReq) *orders_service.CreateOrderRes); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*orders_service.CreateOrderRes)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *orders_service.CreateOrderReq) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrderByID provides a mock function with given fields: _a0, _a1
func (_m *OrdersServiceServer) GetOrderByID(_a0 context.Context, _a1 *orders_service.GetOrderByIDReq) (*orders_service.GetOrderByIDRes, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetOrderByID")
	}

	var r0 *orders_service.GetOrderByIDRes
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.GetOrderByIDReq) (*orders_service.GetOrderByIDRes, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.GetOrderByIDReq) *orders_service.GetOrderByIDRes); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*orders_service.GetOrderByIDRes)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *orders_service.GetOrderByIDReq) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrders provides a mock function with given fields: _a0, _a1
func (_m *OrdersServiceServer) GetOrders(_a0 context.Context, _a1 *orders_service.GetOrdersReq) (*orders_service.GetOrdersRes, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetOrders")
	}

	var r0 *orders_service.GetOrdersRes
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.GetOrdersReq) (*orders_service.GetOrdersRes, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.GetOrdersReq) *orders_service.GetOrdersRes); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*orders_service.GetOrdersRes)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *orders_service.GetOrdersReq) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SubmitOrder provides a mock function with given fields: _a0, _a1
func (_m *OrdersServiceServer) SubmitOrder(_a0 context.Context, _a1 *orders_service.SubmitOrderReq) (*orders_service.SubmitOrderRes, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for SubmitOrder")
	}

	var r0 *orders_service.SubmitOrderRes
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.SubmitOrderReq) (*orders_service.SubmitOrderRes, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.SubmitOrderReq) *orders_service.SubmitOrderRes); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*orders_service.SubmitOrderRes)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *orders_service.SubmitOrderReq) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateShoppingCart provides a mock function with given fields: _a0, _a1
func (_m *OrdersServiceServer) UpdateShoppingCart(_a0 context.Context, _a1 *orders_service.UpdateShoppingCartReq) (*orders_service.UpdateShoppingCartRes, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for UpdateShoppingCart")
	}

	var r0 *orders_service.UpdateShoppingCartRes
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.UpdateShoppingCartReq) (*orders_service.UpdateShoppingCartRes, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *orders_service.UpdateShoppingCartReq) *orders_service.UpdateShoppingCartRes); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*orders_service.UpdateShoppingCartRes)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *orders_service.UpdateShoppingCartReq) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewOrdersServiceServer creates a new instance of OrdersServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrdersServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrdersServiceServer {
	mock := &OrdersServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
