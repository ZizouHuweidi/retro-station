// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	data "github.com/zizouhuweidi/retro-station/internal/services/catalogwriteservice/internal/games/contracts/data"
)

// CatalogContext is an autogenerated mock type for the CatalogContext type
type CatalogContext struct {
	mock.Mock
}

// Games provides a mock function with given fields:
func (_m *CatalogContext) Games() data.GameRepository {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Games")
	}

	var r0 data.GameRepository
	if rf, ok := ret.Get(0).(func() data.GameRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(data.GameRepository)
		}
	}

	return r0
}

// NewCatalogContext creates a new instance of CatalogContext. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCatalogContext(t interface {
	mock.TestingT
	Cleanup(func())
}) *CatalogContext {
	mock := &CatalogContext{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
