// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	domain "github.com/zizouhuweidi/retro-station/internal/pkg/core/domain"
)

// Apply is an autogenerated mock type for the Apply type
type Apply struct {
	mock.Mock
}

// Apply provides a mock function with given fields: event, isNew
func (_m *Apply) Apply(event domain.IDomainEvent, isNew bool) error {
	ret := _m.Called(event, isNew)

	if len(ret) == 0 {
		panic("no return value specified for Apply")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.IDomainEvent, bool) error); ok {
		r0 = rf(event, isNew)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewApply creates a new instance of Apply. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApply(t interface {
	mock.TestingT
	Cleanup(func())
}) *Apply {
	mock := &Apply{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
