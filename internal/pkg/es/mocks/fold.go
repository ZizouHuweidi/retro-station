// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/zizouhuweidi/retro-station/internal/pkg/core/domain"
	metadata "github.com/zizouhuweidi/retro-station/internal/pkg/core/metadata"

	mock "github.com/stretchr/testify/mock"
)

// fold is an autogenerated mock type for the fold type
type fold struct {
	mock.Mock
}

// fold provides a mock function with given fields: event, _a1
func (_m *fold) fold(event domain.IDomainEvent, _a1 metadata.Metadata) error {
	ret := _m.Called(event, _a1)

	if len(ret) == 0 {
		panic("no return value specified for fold")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.IDomainEvent, metadata.Metadata) error); ok {
		r0 = rf(event, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newFold creates a new instance of fold. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newFold(t interface {
	mock.TestingT
	Cleanup(func())
}) *fold {
	mock := &fold{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
