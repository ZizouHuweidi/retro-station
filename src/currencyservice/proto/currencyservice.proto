syntax = "proto3";

package retrostation;

option go_package = "./proto;retrostation";

// -----------------Currency service-----------------

service CurrencyService {
  rpc GetSupportedCurrencies(Empty) returns (GetSupportedCurrenciesResponse) {}
  rpc Convert(CurrencyConversionRequest) returns (Money) {}
}

message Empty {}

// Represents an amount of money with its currency type.
message Money {
  // The 3-letter currency code defined in ISO 4217.
  string currency_code = 1;

  // The whole units of the amount.
  // For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
  int64 units = 2;

  // Number of nano (10^-9) units of the amount.
  // The value must be between -999,999,999 and +999,999,999 inclusive.
  // If `units` is positive, `nanos` must be positive or zero.
  // If `units` is zero, `nanos` can be positive, zero, or negative.
  // If `units` is negative, `nanos` must be negative or zero.
  // For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
  int32 nanos = 3;
}

message GetSupportedCurrenciesResponse {
  // The 3-letter currency code defined in ISO 4217.
  repeated string currency_codes = 1;
}

message CurrencyConversionRequest {
  Money from = 1;

  // The 3-letter currency code defined in ISO 4217.
  string to_code = 2;
}